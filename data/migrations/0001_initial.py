# Generated by Django 3.2.4 on 2021-08-30 02:27

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('occurrenceID', models.CharField(blank=True, max_length=1000, null=True)),
                ('collectionID', models.CharField(blank=True, max_length=1000, null=True)),
                ('tbiaUUID', models.CharField(blank=True, max_length=1000, null=True)),
                ('rightsHolder', models.CharField(blank=True, max_length=100, null=True)),
                ('taxonUUID', models.CharField(blank=True, max_length=100, null=True)),
                ('associatedMedia', models.CharField(blank=True, max_length=1000, null=True)),
                ('originalScientificName', models.CharField(blank=True, max_length=100, null=True)),
                ('originalVernacularName', models.CharField(blank=True, max_length=100, null=True)),
                ('taxonRank', models.CharField(blank=True, max_length=100, null=True)),
                ('typeStatus', models.CharField(blank=True, max_length=100, null=True)),
                ('eventDate', models.CharField(blank=True, max_length=100, null=True)),
                ('standardDate', models.DateTimeField(blank=True, null=True)),
                ('verbatimLongitude', models.CharField(blank=True, max_length=1000, null=True)),
                ('verbatimLatitude', models.CharField(blank=True, max_length=1000, null=True)),
                ('verbatimCoordinateSystem', models.CharField(blank=True, max_length=100, null=True)),
                ('verbatimSRS', models.CharField(blank=True, max_length=100, null=True)),
                ('standardLongitude', models.DecimalField(decimal_places=10, max_digits=13)),
                ('standardLatitude', models.DecimalField(decimal_places=10, max_digits=13)),
                ('coordinateUncertaintyInMeters', models.CharField(blank=True, max_length=100, null=True)),
                ('dataGeneralizations', models.BooleanField(blank=True, null=True)),
                ('coordinatePrecision', models.CharField(blank=True, max_length=100, null=True)),
                ('locality', models.CharField(blank=True, max_length=1000, null=True)),
                ('organismQuantity', models.CharField(blank=True, max_length=1000, null=True)),
                ('organismQuantityType', models.CharField(blank=True, max_length=100, null=True)),
                ('recordedBy', models.CharField(blank=True, max_length=100, null=True)),
                ('recordNumber', models.CharField(blank=True, max_length=1000, null=True)),
                ('scientificNameID', models.CharField(blank=True, max_length=100, null=True)),
                ('preservation', models.CharField(blank=True, max_length=1000, null=True)),
                ('datasetName', models.CharField(blank=True, max_length=1000, null=True)),
                ('ResourceContacts', models.CharField(blank=True, max_length=1000, null=True)),
                ('references', models.CharField(blank=True, max_length=1000, null=True)),
                ('license', models.CharField(blank=True, max_length=100, null=True)),
                ('sensitiveCategory', models.CharField(blank=True, max_length=100, null=True)),
                ('selfProduced', models.BooleanField(blank=True, null=True)),
                ('originalModified', models.DateField(auto_now_add=True)),
                ('originalCreated', models.DateField(auto_now_add=True)),
                ('modified', models.DateField(auto_now_add=True)),
                ('created', models.DateField(auto_now_add=True)),
            ],
            options={
                'db_table': 'collection',
            },
        ),
        migrations.CreateModel(
            name='Occurrence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tbiaUUID', models.CharField(blank=True, max_length=1000, null=True)),
                ('taxonUUID', models.CharField(blank=True, max_length=100, null=True)),
                ('originalModified', models.DateField(auto_now_add=True)),
                ('originalCreated', models.DateField(auto_now_add=True)),
                ('modified', models.DateField(auto_now_add=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('rightsHolder', models.CharField(blank=True, max_length=100, null=True)),
                ('occurrenceID', models.CharField(blank=True, max_length=1000, null=True)),
                ('originalScientificName', models.CharField(blank=True, max_length=100, null=True)),
                ('originalVernacularName', models.CharField(blank=True, max_length=100, null=True)),
                ('sensitiveCategory', models.CharField(blank=True, max_length=100, null=True)),
                ('taxonRank', models.CharField(blank=True, max_length=100, null=True)),
                ('eventDate', models.CharField(blank=True, max_length=100, null=True)),
                ('standardDate', models.DateTimeField(blank=True, null=True)),
                ('verbatimLongitude', models.CharField(blank=True, max_length=1000, null=True)),
                ('verbatimLatitude', models.CharField(blank=True, max_length=1000, null=True)),
                ('verbatimCoordinateSystem', models.CharField(blank=True, max_length=100, null=True)),
                ('verbatimSRS', models.CharField(blank=True, max_length=100, null=True)),
                ('standardLongitude', models.DecimalField(decimal_places=10, max_digits=13)),
                ('standardLatitude', models.DecimalField(decimal_places=10, max_digits=13)),
                ('coordinateUncertaintyInMeters', models.CharField(blank=True, max_length=100, null=True)),
                ('dataGeneralizations', models.BooleanField(blank=True, null=True)),
                ('coordinatePrecision', models.CharField(blank=True, max_length=100, null=True)),
                ('locality', models.CharField(blank=True, max_length=1000, null=True)),
                ('organismQuantity', models.CharField(blank=True, max_length=1000, null=True)),
                ('organismQuantityType', models.CharField(blank=True, max_length=100, null=True)),
                ('recordedBy', models.CharField(blank=True, max_length=1000, null=True)),
                ('scientificNameID', models.CharField(blank=True, max_length=100, null=True)),
                ('basisOfRecord', models.CharField(blank=True, max_length=100, null=True)),
                ('datasetName', models.CharField(blank=True, max_length=1000, null=True)),
                ('resourceContacts', models.CharField(blank=True, max_length=1000, null=True)),
                ('references', models.CharField(blank=True, max_length=1000, null=True)),
                ('license', models.CharField(blank=True, max_length=100, null=True)),
                ('selfProduced', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'occurrence',
            },
        ),
        migrations.CreateModel(
            name='taxon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taxonUUID', models.CharField(blank=True, max_length=100, null=True)),
                ('name_id', models.CharField(blank=True, max_length=100, null=True)),
                ('simple_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('name_author', models.CharField(blank=True, max_length=1000, null=True)),
                ('synonyms', models.CharField(blank=True, max_length=1000, null=True)),
                ('misapplied', models.CharField(blank=True, max_length=1000, null=True)),
                ('rank', models.CharField(blank=True, max_length=1000, null=True)),
                ('common_name_c', models.CharField(blank=True, max_length=1000, null=True)),
                ('alternative_name_c', models.CharField(blank=True, max_length=1000, null=True)),
                ('originalModified', models.DateField(auto_now_add=True)),
                ('originalCreated', models.DateField(auto_now_add=True)),
                ('modified', models.DateField(auto_now_add=True)),
                ('created', models.DateField(auto_now_add=True)),
                ('domain', models.CharField(blank=True, max_length=100, null=True)),
                ('superkingdom', models.CharField(blank=True, max_length=100, null=True)),
                ('kingdom', models.CharField(blank=True, max_length=100, null=True)),
                ('subkingdom', models.CharField(blank=True, max_length=100, null=True)),
                ('infrakingdom', models.CharField(blank=True, max_length=100, null=True)),
                ('superdivision', models.CharField(blank=True, max_length=100, null=True)),
                ('division', models.CharField(blank=True, max_length=100, null=True)),
                ('subdivision', models.CharField(blank=True, max_length=100, null=True)),
                ('infradivision', models.CharField(blank=True, max_length=100, null=True)),
                ('parvdivision', models.CharField(blank=True, max_length=100, null=True)),
                ('superphylum', models.CharField(blank=True, max_length=100, null=True)),
                ('phylum', models.CharField(blank=True, max_length=100, null=True)),
                ('subphylum', models.CharField(blank=True, max_length=100, null=True)),
                ('infraphylum', models.CharField(blank=True, max_length=100, null=True)),
                ('microphylum', models.CharField(blank=True, max_length=100, null=True)),
                ('parvphylum', models.CharField(blank=True, max_length=100, null=True)),
                ('superclass', models.CharField(blank=True, max_length=100, null=True)),
                ('Class', models.CharField(blank=True, max_length=100, null=True)),
                ('subclass', models.CharField(blank=True, max_length=100, null=True)),
                ('infraclass', models.CharField(blank=True, max_length=100, null=True)),
                ('superorder', models.CharField(blank=True, max_length=100, null=True)),
                ('order', models.CharField(blank=True, max_length=100, null=True)),
                ('suborder', models.CharField(blank=True, max_length=100, null=True)),
                ('infraorder', models.CharField(blank=True, max_length=100, null=True)),
                ('superfamily', models.CharField(blank=True, max_length=100, null=True)),
                ('family', models.CharField(blank=True, max_length=100, null=True)),
                ('subfamily', models.CharField(blank=True, max_length=100, null=True)),
                ('tribe', models.CharField(blank=True, max_length=100, null=True)),
                ('subtribe', models.CharField(blank=True, max_length=100, null=True)),
                ('genus', models.CharField(blank=True, max_length=100, null=True)),
                ('subgenus', models.CharField(blank=True, max_length=100, null=True)),
                ('section', models.CharField(blank=True, max_length=100, null=True)),
                ('subsection', models.CharField(blank=True, max_length=100, null=True)),
                ('species', models.CharField(blank=True, max_length=100, null=True)),
                ('subspecies', models.CharField(blank=True, max_length=100, null=True)),
                ('nothosubspecies', models.CharField(blank=True, max_length=100, null=True)),
                ('variety', models.CharField(blank=True, max_length=100, null=True)),
                ('subvariety', models.CharField(blank=True, max_length=100, null=True)),
                ('nothovariety', models.CharField(blank=True, max_length=100, null=True)),
                ('form', models.CharField(blank=True, max_length=100, null=True)),
                ('subform', models.CharField(blank=True, max_length=100, null=True)),
                ('specialForm', models.CharField(blank=True, max_length=100, null=True)),
                ('race', models.CharField(blank=True, max_length=100, null=True)),
                ('stirp', models.CharField(blank=True, max_length=100, null=True)),
                ('morph', models.CharField(blank=True, max_length=100, null=True)),
                ('aberration', models.CharField(blank=True, max_length=100, null=True)),
                ('hybridFormula', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'taxon',
            },
        ),
    ]
