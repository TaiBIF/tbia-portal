version: '3.7'

networks:
  gateway:
    external: true

services:
  web:
    build: .
    container_name: tbia-web-stag-container
    image: tbia-web-stag-image
    expose:
      - 8001
    depends_on:
      - postgres
    links:
      - postgres:postgres
    volumes:
      - .:/code
      - ../tbia-volumes/static:/tbia-volumes/static
      - ../tbia-volumes/bucket:/tbia-volumes/bucket
      - ../tbia-volumes/media:/tbia-volumes/media
      - ../tbia-volumes/solr:/tbia-volumes/solr
    # command: "./scripts/docker-web-entry.sh"
    command: "./scripts/wait-for-it.sh solr:8983 -t 5 -- ./scripts/docker-web-entry.sh"
    restart: always
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      # - internal
      - gateway
    labels:  # redirecting http to https and defining routers and using tcl certresolver
      - "traefik.enable=true"
      # - "traefik.docker.network: gateway2"
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.routers.web.entrypoints=web"
      # - "traefik.http.routers.admin.rule=Host(`mk.getalice.ai`)"
      # - "traefik.http.routers.admin.middlewares=redirect-https@docker"
      - "traefik.http.routers.web.rule=Host(`dev.tbiadata.tw`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"

    # environment:
    #   - POSTGRES_HOST=postgres
    #   - POSTGRES_PORT=5432
    #   - POSTGRES_USER=postgres
    #   - POSTGRES_PASSWORD=example
    #   - POSTGRES_DB=tbia
  postgres:
    image: postgres:13-alpine
    container_name: tbia-db-stag-container
    restart: always
    ports:
      - 5431:5432
    volumes:
      - ../tbia-volumes/pgdata:/var/lib/postgresql/data/pgdata
      - ../tbia-volumes/bucket:/tbia-volumes/bucket
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=tbia
      - PGDATA=/var/lib/postgresql/data/pgdata

  nginx-portal:  # nginx to serve static files
    image: nginx:latest
    container_name: nginx-portal
    restart: always
    volumes:
      - ./scripts/nginx/stag/stag.conf:/etc/nginx/conf.d/default.conf
      - ../tbia-volumes/static:/tbia-volumes/static
      - ../tbia-volumes/media:/tbia-volumes/media
    depends_on:
      - web
    links:
      - web:web
    networks:
      - gateway
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-portal.rule=Host(`dev.tbiadata.tw`)"
      - "traefik.http.routers.nginx-portal.entrypoints=websecure"
      - "traefik.http.routers.nginx-portal.tls.certresolver=myresolver"


# 舊的

  # nginx:
  #   image: nginx:1.19.10-alpine
  #   restart: always
  #   ports:
  #     - 80:80
  #     - 443:443
  #   volumes:
  #     - ./scripts/nginx/staging:/etc/nginx/conf.d
  #     - ../tbia-volumes/static:/tbia-volumes/static
  #     - ../tbia-volumes/media:/tbia-volumes/media
  #     - ../tbia-volumes/logs/nginx:/var/log/nginx
  #     - ../tbia-volumes/certbot/conf:/etc/letsencrypt
  #     - ../tbia-volumes/certbot/www:/var/www/certbot
  #   links:
  #     - web:web
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "1m"
  #       max-file: "3"
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  # certbot:
  #   image: certbot/certbot
  #   volumes:
  #     - ../tbia-volumes/certbot/conf:/etc/letsencrypt
  #     - ../tbia-volumes/certbot/www:/var/www/certbot
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
