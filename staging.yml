networks:
  gateway:
    external: true
  datahub:
    external: true
  app_network:
    driver: bridge

services:
  web:
    build: .
    container_name: tbia-web-stag-container
    image: tbia-web-stag-image
    expose:
      - 8001
    depends_on:
      - postgres
    links:
      - postgres:postgres
    volumes:
      - .:/code
      - ../tbia-volumes/static:/tbia-volumes/static
      - ../tbia-volumes/bucket:/tbia-volumes/bucket
      - ../tbia-volumes/media:/tbia-volumes/media
      - ../tbia-volumes/solr:/tbia-volumes/solr
    command: "./scripts/wait-for-it.sh solr:8983 -t 5 -- ./scripts/docker-web-entry.sh"
    restart: always
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - gateway
      - app_network
    labels:  # redirecting http to https and defining routers and using tcl certresolver
      - "traefik.enable=true"
      - "traefik.http.middlewares.redirect-https.redirectscheme.scheme=https"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.routers.web.rule=Host(`dev.tbiadata.tw`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=myresolver"
  postgres:
    image: postgres:13-alpine
    container_name: tbia-db-stag-container
    restart: always
    # ports:
    #   - 5431:5432
    volumes:
      - ../tbia-volumes/pgdata:/var/lib/postgresql/data/pgdata
      - ../tbia-volumes/bucket:/tbia-volumes/bucket
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=example
      - POSTGRES_DB=tbia
      - PGDATA=/var/lib/postgresql/data/pgdata
    networks:
      - gateway
      - app_network
      - datahub
  nginx-portal:  # nginx to serve static files
    image: nginx:1.26.0-alpine
    container_name: nginx-portal
    restart: always
    volumes:
      - ./scripts/nginx/stag/stag.conf:/etc/nginx/conf.d/default.conf
      - ../tbia-volumes/static:/tbia-volumes/static
      - ../tbia-volumes/media:/tbia-volumes/media
      - ../tbia-volumes/logs/nginx:/var/log/nginx
    depends_on:
      - web
    networks:
      - gateway
      - app_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nginx-portal.rule=Host(`dev.tbiadata.tw`)"
      - "traefik.http.routers.nginx-portal.entrypoints=websecure"
      - "traefik.http.routers.nginx-portal.tls.certresolver=myresolver"

      # == 限流 router: 限制所有 /api 的路徑 ==
      - "traefik.http.routers.nginx-portal-api-limit.rule=Host(`dev.tbiadata.tw`) && PathPrefix(`/api`)"
      - "traefik.http.routers.nginx-portal-api-limit.entrypoints=websecure"
      - "traefik.http.routers.nginx-portal-api-limit.tls.certresolver=myresolver"
      - "traefik.http.routers.nginx-portal-api-limit.middlewares=ratelimit-api"
      - "traefik.http.routers.nginx-api-nolimit.service=nginx-portal"

      # == rate limit middleware 設定 ==
      - "traefik.http.middlewares.ratelimit-api.ratelimit.average=8"
      - "traefik.http.middlewares.ratelimit-api.ratelimit.burst=10"